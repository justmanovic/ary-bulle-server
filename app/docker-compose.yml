version: "3"
services:
  front_prod:
    image: registry.kimchi.ovh/ary-nextjs-app:${NEXTJS_TAG}
    container_name: ary-nextjs-app-prod
    ports:
      - ${NEXTJS_PORT}:3000
    # volumes:
    #   - ./ary-front:/app
    depends_on:
      - strapi_prod
    environment:
      - NEXT_PUBLIC_STRAPI_URL=http://host.docker.internal:1337
    networks:
      - strapi_prod
      - traefik-public
    env_file: .env
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.nextjs.entrypoints=websecure"
      - "traefik.http.routers.nextjs.rule=Host(`kimchi.ovh`)"
      - "traefik.http.routers.nextjs.tls=true"
      - "traefik.http.routers.nextjs.tls.certresolver=le"
      - "traefik.http.routers.nextjs.tls.domains[0].main=kimchi.ovh"
      - "traefik.http.services.nextjs.loadbalancer.server.port=${NEXTJS_PORT}"
  strapi_prod:
    image: registry.kimchi.ovh/ary-strapi-app:${STRAPI_TAG}
    container_name: ary-strapi-app-prod
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./strapi-images:/opt/app/public/uploads
      - ./db:/opt/app/.tmp
    ports:
      - ${STRAPI_PORT}:1337
    networks:
      - strapi_prod
      - traefik-public
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.strapi.entrypoints=websecure"
      - "traefik.http.routers.strapi.rule=Host(`strapi.kimchi.ovh`)"
      - "traefik.http.routers.strapi.tls=true"
      - "traefik.http.routers.strapi.tls.certresolver=le"
      - "traefik.http.routers.strapi.tls.domains[0].main=strapi.kimchi.ovh"
      - "traefik.http.services.strapi.loadbalancer.server.port=${STRAPI_PORT}"

networks:
  strapi_prod:
  traefik-public:
    external: true
